@using EmployeeManagementSystem.BaseLibrary.SeedWorks
@using EmployeeManagementSystem.Client.Features
@using Syncfusion.Blazor.Buttons
@foreach (var item in _links)
{
    <SfButton OnClick="() => OnSelectedPage(item)" Disabled="!item.Enabled" CssClass="@GetButtonCssClass(item.Active)">
        @item.Text
    </SfButton>
}

@code {
    [Parameter]
    public MetaData MetaData { get; set; } = new();
    [Parameter]
    public int Spread { get; set; }
    [Parameter]
    public EventCallback<int> SelectedPage { get; set; }

    private List<PagingLink> _links;

    private string GetButtonCssClass(bool isActive)
    {
        return isActive ? "e-primary" : "e-flat";
    }

    protected override void OnParametersSet()
    {
        CreatePaginationLinks();
    }

    private void CreatePaginationLinks()
    {
        _links = new();
        _links.Add(new PagingLink(MetaData.CurrentPage - 1, MetaData.HasPrevious, "Previous"));
        for (int i = 1; i <= MetaData.TotalPages; i++)
        {
            if (i >= MetaData.CurrentPage - Spread && i <= MetaData.CurrentPage + Spread)
            {
                _links.Add(new PagingLink(i, true, i.ToString()) { Active = MetaData.CurrentPage == i });
            }
        }
        _links.Add(new PagingLink(MetaData.CurrentPage + 1, MetaData.HasNext, "Next"));
    }

    private async Task OnSelectedPage(PagingLink link)
    {
        if (link.Page == MetaData.CurrentPage || !link.Enabled)
            return;
        MetaData.CurrentPage = link.Page;
        await SelectedPage.InvokeAsync(link.Page);
    }
}
