@using EmployeeManagementSystem.BaseLibrary.Dtos.Client
@using EmployeeManagementSystem.ClientLibrary.Helpers
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inherits LayoutComponentBase
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <a class="btn btn-none text-danger" @onclick="LogoutClicked">Logout</a>
                </Authorized>
                <NotAuthorized>
                    <a class="btn btn-none" href="identity/account/login">Login</a>
                    <a class="btn btn-none" href="identity/account/register">Register</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    // protected override async Task OnInitializedAsync()
    // {
    //     var authState = await AuthStateProvider.GetAuthenticationStateAsync();
    //     var user = authState.User;

    //     if (!user.Identity!.IsAuthenticated)
    //     {
    //         NavManager.NavigateTo($"/identity/account/login");
    //     }
    // }

    private async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", forceLoad: true);
    }
}